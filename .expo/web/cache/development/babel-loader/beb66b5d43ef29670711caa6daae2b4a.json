{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\screens\\\\singleProductEdit\\\\SingleProductEditScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImagePickerExample from \"../../components/ImagePicker/ImagePicker\";\nimport App from \"../../API/firebaseConfig\";\nimport PhotoPickModal from \"../../components/PhotoPickModal/PhotoPickModal\";\nimport styles from \"./styles\";\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\nimport { connect } from 'react-redux';\nimport { convertObToArr, getCategoryName } from \"../../data/MockDataAPI\";\nimport SingleIngredientInput from \"../../components/EditIngredients/SingleIngredientInput\";\nimport EditIngredients from \"../../components/EditIngredients/EditIngredients\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { updateData as _updateData } from \"../../store/shop/products\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport HeaderBtnSave from \"../../components/HeaderBtnSave/HeaderBtnSave\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.categories\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateData: function updateData(data) {\n      return _updateData(dispatch, data);\n    }\n  };\n};\n\nvar SAVE_BTN_OFF = 0;\nvar SAVE_BTN_ON = 1;\nvar SAVE_BTN_LOADING = 2;\n\nfunction uploadToFirebase(uri, path) {\n  var blob, ref, downloadUrl;\n  return _regeneratorRuntime.async(function uploadToFirebase$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = _regeneratorRuntime;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(uri));\n\n        case 3:\n          _context.t1 = _context.sent.blob();\n          _context.next = 6;\n          return _context.t0.awrap.call(_context.t0, _context.t1);\n\n        case 6:\n          blob = _context.sent;\n          ref = App.storage.ref().child(path);\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(ref.put(blob));\n\n        case 10:\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(ref.getDownloadURL());\n\n        case 12:\n          downloadUrl = _context.sent;\n          return _context.abrupt(\"return\", downloadUrl);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar SingleProductEditScreen = connect(mapStateToProps, mapDispatchToProps)(function (props) {\n  var navigation = props.navigation;\n  var product = props.route.params.product;\n  useEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(BackButton, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        });\n      },\n      title: product.title\n    });\n  }, []);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      photo = _useState2[0],\n      setPhoto = _useState2[1];\n\n  var _useState3 = useState({\n    show: false,\n    mode: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      photoModal = _useState4[0],\n      showPhotoModal = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      arrIndex = _useState6[0],\n      setArrInd = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selected = _useState8[0],\n      setSelected = _useState8[1];\n\n  var _useState9 = useState({\n    title: product.title,\n    categoryId: product.categoryId,\n    photoUrl: product.photo_url,\n    photosArray: product.photosArray,\n    ingredients: product.ingredients\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      productProperties = _useState10[0],\n      editProductProperties = _useState10[1];\n\n  var _showPhotoHandler = function showPhotoHandler(uri) {\n    setPhoto(uri);\n  };\n\n  var _useState11 = useState(SAVE_BTN_OFF),\n      _useState12 = _slicedToArray(_useState11, 2),\n      saveBtnState = _useState12[0],\n      setSaveBtnState = _useState12[1];\n\n  var onSavePress = function onSavePress() {\n    var handlePhotoUpload, photosArray, photo_url, pInd, dataToUpload;\n    return _regeneratorRuntime.async(function onSavePress$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            handlePhotoUpload = function _handlePhotoUpload(photoUrl) {\n              var ext, fileName, uploadUrl;\n              return _regeneratorRuntime.async(function handlePhotoUpload$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      if (!(photoUrl.substr(0, 7) === 'file://')) {\n                        _context2.next = 15;\n                        break;\n                      }\n\n                      _context2.prev = 1;\n                      ext = photoUrl.split('.').pop();\n                      fileName = Date.now();\n                      _context2.next = 6;\n                      return _regeneratorRuntime.awrap(uploadToFirebase(photoUrl, product.id + \"/\" + fileName + '.' + ext));\n\n                    case 6:\n                      uploadUrl = _context2.sent;\n                      return _context2.abrupt(\"return\", uploadUrl);\n\n                    case 10:\n                      _context2.prev = 10;\n                      _context2.t0 = _context2[\"catch\"](1);\n                      console.log(_context2.t0.message, '\\nFailed to upload photo at', photoUrl);\n\n                    case 13:\n                      _context2.next = 16;\n                      break;\n\n                    case 15:\n                      return _context2.abrupt(\"return\", photoUrl);\n\n                    case 16:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, [[1, 10]], Promise);\n            };\n\n            setSaveBtnState(SAVE_BTN_LOADING);\n            photosArray = [];\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(handlePhotoUpload(productProperties.photoUrl));\n\n          case 5:\n            photo_url = _context3.sent;\n            _context3.t0 = _regeneratorRuntime.keys(productProperties.photosArray);\n\n          case 7:\n            if ((_context3.t1 = _context3.t0()).done) {\n              _context3.next = 16;\n              break;\n            }\n\n            pInd = _context3.t1.value;\n            _context3.t2 = photosArray;\n            _context3.next = 12;\n            return _regeneratorRuntime.awrap(handlePhotoUpload(productProperties.photosArray[pInd]));\n\n          case 12:\n            _context3.t3 = _context3.sent;\n\n            _context3.t2.push.call(_context3.t2, _context3.t3);\n\n            _context3.next = 7;\n            break;\n\n          case 16:\n            dataToUpload = _objectSpread(_objectSpread({}, productProperties), {}, {\n              photosArray: photosArray,\n              photo_url: photo_url,\n              id: product.id\n            });\n            delete dataToUpload.photoUrl;\n            _context3.next = 20;\n            return _regeneratorRuntime.awrap(props.updateData(dataToUpload));\n\n          case 20:\n            setSaveBtnState(SAVE_BTN_OFF);\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(HeaderBtnSave, {\n          loading: saveBtnState === SAVE_BTN_LOADING,\n          disabled: saveBtnState !== SAVE_BTN_ON,\n          onPress: function onPress() {\n            return onSavePress();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        });\n      }\n    });\n  }, [saveBtnState, productProperties]);\n\n  var photoModalHandler = function photoModalHandler(mode, index) {\n    switch (mode) {\n      case 'changePhoto':\n        return React.createElement(PhotoPickModal, {\n          mode: 'changePhoto',\n          changeUrl: function changeUrl(newUrl) {\n            selected && changeStateHandler(selected, newUrl, null, 'changePhoto');\n          },\n          unmountModal: function unmountModal() {\n            return showPhotoModal(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                show: false\n              });\n            });\n          },\n          showPhotoHandler: function showPhotoHandler(uri) {\n            return _showPhotoHandler(uri);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }\n        });\n\n      case 'addPhoto':\n        return React.createElement(PhotoPickModal, {\n          mode: 'addPhoto',\n          addUrl: function addUrl(newUrl) {\n            changeStateHandler('photosArray', newUrl, null, 'addPhoto');\n          },\n          unmountModal: function unmountModal() {\n            return showPhotoModal(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                show: false\n              });\n            });\n          },\n          showPhotoHandler: function showPhotoHandler(uri) {\n            return _showPhotoHandler(uri);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        });\n\n      case 'removePhoto':\n        changeStateHandler('photosArray', null, index, 'removePhoto');\n\n      default:\n        return null;\n    }\n  };\n\n  var categoryArr = function categoryArr(categories) {\n    var result = [];\n    categories.forEach(function (element) {\n      var elValue = Object.values(element)[0];\n      result.push({\n        label: elValue.name,\n        value: elValue.id\n      });\n    });\n    return result;\n  };\n\n  var changeStateHandler = function changeStateHandler(field, value, inputIdx, action) {\n    setSaveBtnState(SAVE_BTN_ON);\n\n    if (field === 'photosArray' && action === 'changePhoto') {\n      editProductProperties(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          photosArray: prevState.photosArray.map(function (item, index) {\n            if (index === arrIndex) {\n              setArrInd(null);\n              return value;\n            } else return item;\n          })\n        });\n      });\n      setSelected(null);\n      return;\n    }\n\n    if (field === 'photosArray' && action === 'addPhoto') {\n      editProductProperties(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          photosArray: [].concat(_toConsumableArray(prevState.photosArray), [value])\n        });\n      });\n      return;\n    }\n\n    if (field === 'photosArray' && action === 'removePhoto') {\n      editProductProperties(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          photosArray: prevState.photosArray.filter(function (value, index) {\n            return index !== inputIdx && value;\n          })\n        });\n      });\n      return;\n    }\n\n    if (field === 'ingredients') {\n      switch (action) {\n        case 'changeIngredient':\n          editProductProperties(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              ingredients: prevState.ingredients.map(function (item, index) {\n                if (index === inputIdx) {\n                  item[\"name\"] = value;\n                  return item;\n                } else {\n                  return item;\n                }\n              })\n            });\n          });\n          return;\n\n        case 'removeIngredient':\n          editProductProperties(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              ingredients: prevState.ingredients.filter(function (item, index) {\n                return index !== inputIdx && item;\n              })\n            });\n          });\n          return;\n\n        case 'addIngredient':\n          editProductProperties(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              ingredients: [].concat(_toConsumableArray(prevState.ingredients), [{\n                name: ''\n              }])\n            });\n          });\n          return;\n\n        default:\n          return null;\n      }\n    }\n\n    editProductProperties(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, field, value));\n    });\n    setSelected(null);\n  };\n\n  var renderProductImage = function renderProductImage(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress(e) {\n        console.log(e.target);\n        setSelected('photosArray');\n        setArrInd(index);\n        showPhotoModal(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            show: true,\n            mode: 'changePhoto'\n          });\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, React.createElement(ImageBackground, {\n      style: [styles.photo, {\n        margin: 10\n      }],\n      source: {\n        uri: item\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.photoOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        borderWidth: 2,\n        borderColor: 'white',\n        borderRadius: 10,\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }, \"Change\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return changeStateHandler('photosArray', null, index, 'removePhoto');\n      },\n      style: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        zIndex: 999,\n        width: 50,\n        height: 50,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 20,\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, \"X\"))));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, photoModal.show && photoModalHandler(photoModal.mode), React.createElement(ScrollView, {\n    contentContainerStyle: styles.scrollContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setSelected('photoUrl');\n      showPhotoModal(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          show: true,\n          mode: 'changePhoto'\n        });\n      });\n    },\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, React.createElement(ImageBackground, {\n    style: [styles.photo, {\n      margin: 10\n    }],\n    source: {\n      uri: productProperties.photoUrl\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.photoOverlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.changeBtnTxt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, \"Change\")))), React.createElement(TextInput, {\n    style: styles.productTitle,\n    value: productProperties.title,\n    onChangeText: function onChangeText(text) {\n      return changeStateHandler('title', text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }), React.createElement(Dropdown, {\n    items: categoryArr(convertObToArr(props.categories)),\n    onValueChange: function onValueChange(value) {\n      return changeStateHandler('categoryId', value);\n    },\n    value: productProperties.categoryId,\n    placeholder: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }), product.photosArray.length > 0 ? React.createElement(FlatList, {\n    style: {\n      marginBottom: 5\n    },\n    vertical: true,\n    showsVerticalScrollIndicator: true,\n    numColumns: 2,\n    data: productProperties.photosArray,\n    renderItem: renderProductImage,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }) : null, React.createElement(CustomButton, {\n    backgroundColor: '#2cd18a',\n    onPress: function onPress() {\n      return showPhotoModal(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          show: true,\n          mode: 'addPhoto'\n        });\n      });\n    },\n    title: 'Foto əlavə et',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.ingredientsEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, \"T\\u0259rkibi\"), React.createElement(EditIngredients, {\n    ingredients: productProperties.ingredients,\n    onChangeText: function onChangeText(text, index) {\n      changeStateHandler('ingredients', text, index, 'changeIngredient');\n    },\n    onClose: function onClose(index) {\n      return changeStateHandler('ingredients', null, index, 'removeIngredient');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomButton, {\n    onPress: function onPress() {\n      return changeStateHandler('ingredients', null, null, 'addIngredient');\n    },\n    backgroundColor: '#2cd18a',\n    title: 'Tərkib əlavə et',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }))));\n});\nexport default SingleProductEditScreen;","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/screens/singleProductEdit/SingleProductEditScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","ImagePickerExample","App","PhotoPickModal","styles","Dropdown","connect","convertObToArr","getCategoryName","SingleIngredientInput","EditIngredients","CustomButton","updateData","BackButton","HeaderBtnSave","mapStateToProps","state","categories","mapDispatchToProps","dispatch","data","SAVE_BTN_OFF","SAVE_BTN_ON","SAVE_BTN_LOADING","uploadToFirebase","uri","path","fetch","blob","ref","storage","child","put","getDownloadURL","downloadUrl","SingleProductEditScreen","props","navigation","product","route","params","setOptions","headerLeft","goBack","title","photo","setPhoto","show","mode","photoModal","showPhotoModal","arrIndex","setArrInd","selected","setSelected","categoryId","photoUrl","photo_url","photosArray","ingredients","productProperties","editProductProperties","showPhotoHandler","saveBtnState","setSaveBtnState","onSavePress","handlePhotoUpload","substr","ext","split","pop","fileName","Date","now","id","uploadUrl","console","log","message","pInd","push","dataToUpload","headerRight","photoModalHandler","index","newUrl","changeStateHandler","prevState","categoryArr","result","forEach","element","elValue","Object","values","label","name","value","field","inputIdx","action","map","item","filter","renderProductImage","e","target","margin","photoOverlay","color","borderWidth","borderColor","borderRadius","padding","position","right","top","zIndex","width","height","justifyContent","alignItems","fontSize","fontWeight","container","scrollContent","changeBtnTxt","productTitle","text","length","marginBottom","recipeId","ingredientsEdit"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport {View,Button, Image, Text, FlatList,TouchableOpacity, TextInput, ImageBackground,ScrollView, Alert} from 'react-native'\r\nimport ImagePickerExample from '../../components/ImagePicker/ImagePicker';\r\n\r\n\r\nimport App from '../../API/firebaseConfig'\r\nimport PhotoPickModal from '../../components/PhotoPickModal/PhotoPickModal';\r\nimport styles from './styles';\r\nimport Dropdown from '../../components/Dropdown/Dropdown';\r\nimport { connect } from 'react-redux';\r\nimport { convertObToArr, getCategoryName } from '../../data/MockDataAPI';\r\nimport SingleIngredientInput from '../../components/EditIngredients/SingleIngredientInput';\r\nimport EditIngredients from '../../components/EditIngredients/EditIngredients';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { updateData } from '../../store/shop/products';\r\nimport BackButton from '../../components/BackButton/BackButton';\r\nimport HeaderBtnSave from '../../components/HeaderBtnSave/HeaderBtnSave';\r\n\r\nconst mapStateToProps=(state)=>({\r\n    categories:state.categories\r\n})\r\n\r\nconst mapDispatchToProps=(dispatch)=>({\r\n    updateData:(data)=>updateData(dispatch, data)\r\n})\r\n\r\nconst SAVE_BTN_OFF = 0;\r\nconst SAVE_BTN_ON = 1;\r\nconst SAVE_BTN_LOADING = 2;\r\n\r\n\r\nasync function uploadToFirebase(uri, path){\r\n    // try{    // commented try block, as error is handled outside\r\n        let blob = await (await fetch(uri)).blob()\r\n        let ref = App.storage.ref().child(path)\r\n        await ref.put(blob)\r\n        const downloadUrl = await ref.getDownloadURL()\r\n        return downloadUrl;\r\n    // } catch(e){\r\n    //     console.warn(e)\r\n    //     return false\r\n    // }\r\n}\r\n\r\nconst SingleProductEditScreen= connect(mapStateToProps, mapDispatchToProps)((props)=>{\r\n    const {navigation}=props;\r\n    const product=props.route.params.product;\r\n\r\n    useEffect(()=>{\r\n        navigation.setOptions({\r\n            headerLeft:()=>{\r\n                return (\r\n                    <BackButton\r\n                    onPress={()=>navigation.goBack()}\r\n                />\r\n                )\r\n            },\r\n            title:product.title\r\n        })\r\n    }, []);\r\n\r\n    const [photo, setPhoto]=useState(null);\r\n    const [photoModal,showPhotoModal]=useState({show:false,mode:null});\r\n    const [arrIndex, setArrInd]=useState(null);\r\n    const [selected, setSelected]=useState(null);\r\n    const [productProperties, editProductProperties]=useState({\r\n        title:product.title,\r\n        categoryId:product.categoryId,\r\n        photoUrl:product.photo_url,\r\n        photosArray:product.photosArray,\r\n        ingredients:product.ingredients\r\n    })\r\n    const showPhotoHandler=(uri)=>{\r\n        setPhoto(uri);\r\n    }\r\n    const [saveBtnState, setSaveBtnState] = useState(SAVE_BTN_OFF);\r\n\r\n    const onSavePress = async() => {\r\n        setSaveBtnState(SAVE_BTN_LOADING);\r\n        async function handlePhotoUpload(photoUrl){\r\n            if(photoUrl.substr(0, 7) === 'file://') {\r\n                try {\r\n                    \r\n                    let ext = photoUrl.split('.').pop()\r\n\r\n                    let fileName = Date.now()\r\n                    let uploadUrl = await uploadToFirebase(photoUrl, /*`products/${product.id}/${fileName}${ext}`*/`${product.id}/`+fileName+'.'+ext)\r\n                    return uploadUrl;\r\n                } catch (e) {\r\n                    console.log(e.message, '\\nFailed to upload photo at', photoUrl)\r\n                }\r\n            } else return photoUrl\r\n        }\r\n        let photosArray = [];\r\n        let photo_url = await handlePhotoUpload(productProperties.photoUrl);\r\n        for(let pInd in productProperties.photosArray){\r\n            photosArray.push(await handlePhotoUpload(productProperties.photosArray[pInd]))   \r\n        }\r\n\r\n        let dataToUpload = {\r\n            ...productProperties,\r\n            photosArray,\r\n            photo_url,\r\n            id:product.id\r\n        };\r\n        delete dataToUpload.photoUrl;\r\n\r\n        await props.updateData(dataToUpload)\r\n        setSaveBtnState(SAVE_BTN_OFF);\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigation.setOptions({\r\n            headerRight: () =>\r\n                <HeaderBtnSave\r\n                    loading={saveBtnState===SAVE_BTN_LOADING}\r\n                    disabled={saveBtnState!==SAVE_BTN_ON}\r\n                    onPress={() => onSavePress()}\r\n                />\r\n        })\r\n    }, [saveBtnState, productProperties])\r\n\r\n    //photo select modal handler\r\n    const photoModalHandler=(mode, index)=>{\r\n        \r\n        switch (mode){\r\n            case 'changePhoto':\r\n                return (\r\n                    <PhotoPickModal \r\n                    mode={'changePhoto'} \r\n                    changeUrl={(newUrl)=>{selected && changeStateHandler(selected,newUrl, null, 'changePhoto')}} \r\n                    unmountModal={()=>showPhotoModal(prevState=>({\r\n                        ...prevState,\r\n                        show:false,\r\n                    }))} \r\n                    showPhotoHandler={(uri)=>showPhotoHandler(uri)}/>\r\n                )\r\n            case 'addPhoto':\r\n                \r\n                return (\r\n                    <PhotoPickModal \r\n                    mode={'addPhoto'} \r\n                    addUrl={(newUrl)=>{changeStateHandler('photosArray',newUrl, null, 'addPhoto')}} \r\n                    unmountModal={()=>showPhotoModal(prevState=>({\r\n                        ...prevState,\r\n                        show:false\r\n                    }))} \r\n                    showPhotoHandler={(uri)=>showPhotoHandler(uri)}/>\r\n                )\r\n            case 'removePhoto':\r\n                changeStateHandler('photosArray',null,index,'removePhoto')\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n    //category array create function\r\n     const categoryArr=(categories)=>{\r\n         let result=[];\r\n         categories.forEach(element => {\r\n             const elValue=Object.values(element)[0]\r\n             result.push({\r\n                 label:elValue.name,\r\n                 value:elValue.id\r\n             })\r\n         });\r\n        return result\r\n     }\r\n    const changeStateHandler=(field,value,inputIdx, action)=>{\r\n        setSaveBtnState(SAVE_BTN_ON);\r\n        //change Photo\r\n        if (field==='photosArray' && action==='changePhoto'){\r\n\r\n            editProductProperties(prevState=>({\r\n                ...prevState,\r\n                photosArray:prevState.photosArray.map((item,index)=>{\r\n                    if (index===arrIndex){\r\n                        setArrInd(null)\r\n                        return value\r\n                    } else return item\r\n                })\r\n            }));\r\n            setSelected(null);\r\n            return\r\n        }\r\n        //add photo\r\n        if (field==='photosArray' && action==='addPhoto'){\r\n\r\n            editProductProperties(prevState=>({\r\n                ...prevState,\r\n                photosArray:[...prevState.photosArray, value]\r\n            }));\r\n            return\r\n        }\r\n        if (field==='photosArray' && action==='removePhoto'){\r\n            editProductProperties(prevState=>({\r\n                ...prevState,\r\n                photosArray:prevState.photosArray.filter((value,index)=>{\r\n                    return index!==inputIdx && value;\r\n                })\r\n            }));\r\n            return\r\n        }\r\n        if (field==='ingredients'){\r\n            switch (action){\r\n                case 'changeIngredient':\r\n                    editProductProperties(prevState=>({\r\n                        ...prevState,\r\n                        ingredients:prevState.ingredients.map((item,index)=>{\r\n                            if (index===inputIdx){\r\n                                item[\"name\"]=value;\r\n                                return item\r\n                            } else {\r\n                                return item\r\n                            }\r\n                        })\r\n                    }))\r\n                    return\r\n                case 'removeIngredient':\r\n                    editProductProperties(prevState=>({\r\n                        ...prevState,\r\n                        ingredients:prevState.ingredients.filter((item,index)=>{\r\n                            return index!==inputIdx && item\r\n                        })\r\n                    }))\r\n                    return\r\n                case 'addIngredient':\r\n                    editProductProperties(prevState=>({\r\n                        ...prevState,\r\n                        ingredients:[...prevState.ingredients,{name:''}]\r\n                    }))\r\n                    return\r\n                default:\r\n                    return null\r\n            }\r\n\r\n        }\r\n        editProductProperties(prevState=>({\r\n            ...prevState,\r\n            [field]:value\r\n        }));\r\n        setSelected(null);\r\n    }\r\n\r\n    const renderProductImage=({item, index})=>{\r\n       \r\n        return (\r\n            <TouchableOpacity onPress={(e)=>{console.log(e.target);setSelected('photosArray'); setArrInd(index);showPhotoModal(prevState=>({\r\n                ...prevState,\r\n                show:true,\r\n                mode:'changePhoto'\r\n            }))}}>\r\n                <ImageBackground style={[styles.photo, {margin:10}]} source={{ uri: item }}>\r\n                    <View style={styles.photoOverlay}>\r\n                        <Text style={{color:'white', borderWidth:2, borderColor:'white', borderRadius:10, padding:10}}>Change</Text>\r\n                    </View>\r\n                    <TouchableOpacity onPress={()=>changeStateHandler('photosArray',null,index,'removePhoto')} style={{position:'absolute', \r\n                    right:0, \r\n                    top:0, \r\n                    zIndex:999, \r\n                    width:50, \r\n                    height:50, \r\n                    justifyContent:'center',\r\n                    alignItems:'center'\r\n                    }}>\r\n                        <Text style={{color:'white',fontSize:20,fontWeight:'bold'}}>X</Text>\r\n                    </TouchableOpacity>\r\n                </ImageBackground>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            {photoModal.show && photoModalHandler(photoModal.mode)}\r\n\r\n            <ScrollView contentContainerStyle={styles.scrollContent}>\r\n                <TouchableOpacity onPress={()=>{setSelected('photoUrl'); showPhotoModal(prevState=>({\r\n                    ...prevState,\r\n                    show:true,\r\n                    mode:'changePhoto'\r\n                }))}} style={{justifyContent:'center', alignItems:'center'}}>\r\n                    <ImageBackground style={[styles.photo, {margin:10}]} source={{uri: productProperties.photoUrl}}>\r\n                        <View style={styles.photoOverlay}>\r\n                            {/* <Button title=\"Pick an image\" } /> */}\r\n                            <Text style={styles.changeBtnTxt}>Change</Text>\r\n                        </View>\r\n                    </ImageBackground>\r\n                </TouchableOpacity>\r\n\r\n                <TextInput style={styles.productTitle} value={productProperties.title} onChangeText={(text)=>changeStateHandler('title',text)}/>\r\n                \r\n                <Dropdown\r\n                    items={categoryArr(convertObToArr(props.categories))}\r\n                    onValueChange={(value)=>changeStateHandler('categoryId',value)}\r\n                    value={productProperties.categoryId}\r\n                    placeholder={{}}\r\n                />\r\n\r\n                {\r\n                    product.photosArray.length>0? (\r\n                        <FlatList\r\n                        style={{marginBottom:5}}\r\n                        vertical\r\n                        showsVerticalScrollIndicator={true}\r\n                        numColumns={2}\r\n                        data={productProperties.photosArray}\r\n                        renderItem={renderProductImage}\r\n                        keyExtractor={item => `${item.recipeId}`}\r\n                />\r\n                    ):null\r\n                }\r\n                <CustomButton \r\n                backgroundColor={'#2cd18a'} \r\n                onPress={()=>\r\n                    showPhotoModal(prevState=>({\r\n                        ...prevState,\r\n                        show:true,\r\n                        mode:'addPhoto'\r\n                    }))} \r\n                title={'Foto əlavə et'}/>\r\n\r\n                <View style={styles.ingredientsEdit}>\r\n                    <Text style={{fontWeight:'bold', fontSize:16}}>Tərkibi</Text>\r\n                    <EditIngredients \r\n                        ingredients={productProperties.ingredients} \r\n                        onChangeText={(text,index)=>{changeStateHandler('ingredients',text,index, 'changeIngredient')}}\r\n                        onClose={(index)=>changeStateHandler('ingredients',null,index,'removeIngredient')}\r\n                    />\r\n                    <CustomButton onPress={()=>changeStateHandler('ingredients',null,null,'addIngredient')} backgroundColor={'#2cd18a'} title={'Tərkib əlavə et'}/>\r\n\r\n                </View>\r\n            \r\n            </ScrollView>\r\n            \r\n        </View>\r\n    )\r\n})\r\n\r\n\r\nexport default SingleProductEditScreen"]},"metadata":{},"sourceType":"module"}