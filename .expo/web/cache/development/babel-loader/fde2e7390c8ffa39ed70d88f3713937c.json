{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\components\\\\PhotoPickModal\\\\PhotoPickModal.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport CustomButton from \"../CustomButton/CustomButton\";\n\nvar PhotoPickModal = function PhotoPickModal(props) {\n  var selectPhoto = function selectPhoto() {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  var pickImage = function pickImage(mode) {\n    var _ref, ratio, result;\n\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref = props || [1, 1], ratio = _ref.ratio;\n            selectPhoto();\n\n            if (!(mode === 'select')) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: ratio,\n              quality: 1\n            }));\n\n          case 5:\n            result = _context2.sent;\n            _context2.next = 12;\n            break;\n\n          case 8:\n            if (!(mode === 'take')) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: ratio,\n              quality: 1\n            }));\n\n          case 11:\n            result = _context2.sent;\n\n          case 12:\n            console.log(result);\n\n            if (result.cancelled) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.t0 = props.mode;\n            _context2.next = _context2.t0 === 'changePhoto' ? 17 : _context2.t0 === 'addPhoto' ? 19 : 21;\n            break;\n\n          case 17:\n            props.changeUrl(result.uri);\n            return _context2.abrupt(\"return\");\n\n          case 19:\n            props.addUrl(result.uri);\n            return _context2.abrupt(\"return\");\n\n          case 21:\n            return _context2.abrupt(\"return\", null);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return props.unmountModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.closeButton,\n    onPress: function onPress() {\n      return props.unmountModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.closeBtnTxt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"X\")), React.createElement(View, {\n    style: styles.buttonsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(CustomButton, {\n    backgroundColor: '#2cd18a',\n    style: {\n      margin: 10\n    },\n    onPress: function onPress() {\n      pickImage('select');\n      props.unmountModal();\n    },\n    title: 'Seç',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomButton, {\n    backgroundColor: '#2cd18a',\n    style: {\n      margin: 10\n    },\n    onPress: function onPress() {\n      pickImage('take');\n      props.unmountModal();\n    },\n    title: 'Çək',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default PhotoPickModal;\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    zIndex: 5,\n    width: '100%',\n    height: Dimensions.get('window').height,\n    backgroundColor: 'rgba(0,0,0,0.9)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n    margin: 0,\n    top: 0\n  },\n  closeButton: {\n    position: 'absolute',\n    right: '7%',\n    top: '5%'\n  },\n  closeBtnTxt: {\n    color: 'white',\n    fontSize: 35\n  },\n  buttonsContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  button: {\n    padding: 10\n  },\n  choosePhoto: {},\n  takePhoto: {}\n});","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/components/PhotoPickModal/PhotoPickModal.js"],"names":["React","useState","ImagePicker","Constants","CustomButton","PhotoPickModal","props","selectPhoto","Platform","OS","requestCameraRollPermissionsAsync","status","alert","pickImage","mode","ratio","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","launchCameraAsync","console","log","cancelled","changeUrl","uri","addUrl","unmountModal","styles","container","closeButton","closeBtnTxt","buttonsContainer","margin","StyleSheet","create","position","zIndex","width","height","Dimensions","get","backgroundColor","justifyContent","alignItems","flex","top","right","color","fontSize","flexDirection","button","padding","choosePhoto","takePhoto"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {View, TouchableOpacity, Text, Dimensions, Alert, TouchableWithoutFeedback} from 'react-native';\r\nimport {StyleSheet} from 'react-native'\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport Constants from 'expo-constants';\r\n\r\nimport CustomButton from '../CustomButton/CustomButton';\r\n\r\nconst PhotoPickModal=(props)=>{\r\n    \r\n    const selectPhoto=() => {\r\n        (async () => {\r\n          if (Platform.OS !== 'web') {\r\n            const { status } = await ImagePicker.requestCameraRollPermissionsAsync();\r\n            if (status !== 'granted') {\r\n              alert('Sorry, we need camera roll permissions to make this work!');\r\n            }\r\n          }\r\n        })();\r\n      };\r\n      \r\n      const pickImage = async (mode) => {\r\n        const {ratio}=props || [1,1]\r\n        selectPhoto();\r\n        let result;\r\n        if (mode === 'select'){\r\n          result = await ImagePicker.launchImageLibraryAsync({\r\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n              allowsEditing: true,\r\n              aspect: ratio,\r\n              quality: 1,\r\n            });\r\n        } else if (mode==='take'){\r\n          result = await ImagePicker.launchCameraAsync({\r\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n              allowsEditing: true,\r\n              aspect: ratio,\r\n              quality: 1,\r\n            });\r\n        }\r\n        \r\n    \r\n        console.log(result);\r\n    \r\n        if (!result.cancelled) {\r\n          switch(props.mode){\r\n            case 'changePhoto':\r\n              props.changeUrl(result.uri);\r\n              return\r\n            case 'addPhoto':\r\n              props.addUrl(result.uri)\r\n              return\r\n            default:\r\n              return null\r\n          }\r\n        }\r\n      };\r\n      \r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={()=>props.unmountModal()}>\r\n            <View style={styles.container}>\r\n                <TouchableOpacity style={styles.closeButton} onPress={()=>props.unmountModal()}>\r\n                    <Text style={styles.closeBtnTxt}>X</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.buttonsContainer}>\r\n                    <CustomButton backgroundColor={'#2cd18a'} style={{margin:10}} onPress={()=>{pickImage('select');props.unmountModal()}} title={'Seç'}/>\r\n                    <CustomButton backgroundColor={'#2cd18a'} style={{margin:10}} onPress={()=>{pickImage('take');props.unmountModal()}} title={'Çək'} />\r\n                </View>\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n\r\n        \r\n        \r\n        \r\n        \r\n    )\r\n}\r\nexport default PhotoPickModal\r\n\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        position:'absolute',\r\n        zIndex:5,\r\n        width:'100%',\r\n        height:Dimensions.get('window').height,\r\n        backgroundColor: 'rgba(0,0,0,0.9)',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        flex:1,\r\n        margin:0,\r\n        top:0\r\n    },\r\n    closeButton:{\r\n        position:'absolute',\r\n        right:'7%',\r\n        top:'5%'\r\n    },\r\n    closeBtnTxt:{\r\n        color:'white',\r\n        fontSize:35\r\n    },\r\n    buttonsContainer:{\r\n        width:'100%',\r\n        flexDirection:'row',\r\n        justifyContent:'center'\r\n    },\r\n    button:{\r\n        padding:10\r\n    },\r\n    choosePhoto:{\r\n\r\n    },\r\n    takePhoto:{\r\n\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}