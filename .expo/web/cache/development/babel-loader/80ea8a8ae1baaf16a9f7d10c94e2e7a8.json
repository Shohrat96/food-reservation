{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport App from \"../../API/firebaseConfig\";\nvar SET_CATEGORIES = 'SET_CATEGORIES';\nvar UPDATE_CATEGORY = 'UPDATE_CATEGORY';\nexport var MODULE_NAME = \"categories\";\nexport var selectCategories = function selectCategories(state) {\n  return state[MODULE_NAME];\n};\nvar initialState = {\n  categories: []\n};\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case SET_CATEGORIES:\n      return payload;\n\n    case UPDATE_CATEGORY:\n      var newState = _objectSpread({}, state);\n\n      newState[payload.id] = payload;\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\nexport var setCategories = function setCategories() {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('inside set action');\n\n            try {\n              fetch('https://restaurant-reservation-33a36.firebaseio.com/categories.json', {\n                method: 'GET',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (resp) {\n                return resp.json();\n              }).then(function (data) {\n                console.log('data from set catego:', data);\n                dispatch({\n                  type: 'SET_CATEGORIES',\n                  payload: data\n                });\n              });\n            } catch (error) {\n              Alert.alert(error.message);\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var updateCategory = function updateCategory(data) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('inside update method', data);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(App.db.ref('categories').child(data.id).update(data));\n\n          case 4:\n            dispatch({\n              type: UPDATE_CATEGORY,\n              payload: data\n            });\n            _context2.next = 11;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.log('error: ', _context2.t0);\n            Alert.alert(_context2.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/store/shop/categories.js"],"names":["App","SET_CATEGORIES","UPDATE_CATEGORY","MODULE_NAME","selectCategories","state","initialState","categories","reducer","type","payload","newState","id","setCategories","dispatch","console","log","fetch","method","headers","Accept","then","resp","json","data","error","Alert","alert","message","updateCategory","db","ref","child","update"],"mappings":";;;;;;;;AACA,OAAOA,GAAP;AAGA,IAAMC,cAAc,GAAC,gBAArB;AACA,IAAMC,eAAe,GAAC,iBAAtB;AAGA,OAAO,IAAMC,WAAW,GAAG,YAApB;AACP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACF,WAAD,CAAhB;AAAA,CAAzB;AAIP,IAAMG,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC;AADM,CAArB;;AAiCA,SAASC,OAAT,GAA0D;AAAA,MAAzCH,KAAyC,uEAAjCC,YAAiC;;AAAA;AAAA,MAAjBG,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACxD,UAAQD,IAAR;AACI,SAAKR,cAAL;AACI,aAAOS,OAAP;;AACJ,SAAKR,eAAL;AACE,UAAIS,QAAQ,qBAAON,KAAP,CAAZ;;AACAM,MAAAA,QAAQ,CAACD,OAAO,CAACE,EAAT,CAAR,GAAuBF,OAAvB;AACA,aAAOC,QAAP;;AACF;AACE,aAAON,KAAP;AARN;AAUD;;AAED,eAAeG,OAAf;AAGA,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,iBACjCC,QADiC;AAAA;AAAA;AAAA;AAAA;AAG/BC,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACF,gBAAI;AACFC,cAAAA,KAAK,CAAC,qEAAD,EACL;AACEC,gBAAAA,MAAM,EAAE,KADV;AAEEC,gBAAAA,OAAO,EAAC;AACNC,kBAAAA,MAAM,EAAE,kBADF;AAEN,kCAAe;AAFT;AAFV,eADK,CAAL,CAOGC,IAPH,CAOQ,UAAAC,IAAI;AAAA,uBAAEA,IAAI,CAACC,IAAL,EAAF;AAAA,eAPZ,EAO2BF,IAP3B,CAOgC,UAAAG,IAAI,EAAE;AACpCT,gBAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCQ,IAApC;AACAV,gBAAAA,QAAQ,CAAC;AAACL,kBAAAA,IAAI,EAAC,gBAAN;AAAuBC,kBAAAA,OAAO,EAACc;AAA/B,iBAAD,CAAR;AACD,eAVD;AAYD,aAbD,CAaE,OAAOC,KAAP,EAAc;AACdC,cAAAA,KAAK,CAACC,KAAN,CAAYF,KAAK,CAACG,OAAlB;AACD;;AAnBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAtB;AAwBP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACL,IAAD;AAAA,SAAU,kBAAOV,QAAP;AAAA;AAAA;AAAA;AAAA;AACtCC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCQ,IAAnC;AADsC;AAAA;AAAA,6CAI9BxB,GAAG,CAAC8B,EAAJ,CAAOC,GAAP,CAAW,YAAX,EAAyBC,KAAzB,CAA+BR,IAAI,CAACZ,EAApC,EAAwCqB,MAAxC,CAA+CT,IAA/C,CAJ8B;;AAAA;AAKpCV,YAAAA,QAAQ,CAAC;AAACL,cAAAA,IAAI,EAAEP,eAAP;AAAwBQ,cAAAA,OAAO,EAAEc;AAAjC,aAAD,CAAR;AALoC;AAAA;;AAAA;AAAA;AAAA;AAQpCT,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAU,YAAAA,KAAK,CAACC,KAAN,CAAY,aAAMC,OAAlB;;AAToC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAAvB","sourcesContent":["import { Alert } from \"react-native\";\r\nimport App from \"../../API/firebaseConfig\";\r\n\r\n// ACTION TYPES\r\nconst SET_CATEGORIES='SET_CATEGORIES'\r\nconst UPDATE_CATEGORY='UPDATE_CATEGORY'\r\n\r\n// SELECTORS\r\nexport const MODULE_NAME = \"categories\";\r\nexport const selectCategories = (state) => state[MODULE_NAME];\r\n\r\n\r\n// REDUCER\r\nconst initialState = {\r\n    categories:[\r\n        // {\r\n        //     id: 3,\r\n        //     name: 'Cookies',\r\n        //     photo_url:\r\n        //     'https://www.telegraph.co.uk/content/dam/Travel/2019/January/france-food.jpg?imwidth=1400'\r\n        // },\r\n        // {\r\n        //     id: 1,\r\n        //     name: 'Mexican Food',\r\n        //     photo_url: 'https://ak1.picdn.net/shutterstock/videos/19498861/thumb/1.jpg'\r\n        // },\r\n        // {\r\n        //     id: 2,\r\n        //     name: 'Italian Food',\r\n        //     photo_url:\r\n        //       'https://images.unsplash.com/photo-1533777324565-a040eb52facd?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80'\r\n        // },\r\n        // {\r\n        //     id: 4,\r\n        //     name: 'Smoothies',\r\n        //     photo_url:\r\n        //     'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/still-life-of-three-fresh-smoothies-in-front-of-royalty-free-image-561093647-1544042068.jpg?crop=0.715xw:0.534xh;0.0945xw,0.451xh&resize=768:*'\r\n        // },\r\n        // {\r\n        //     id: 0,\r\n        //     name: 'Pizza',\r\n        //     photo_url: 'https://amp.businessinsider.com/images/5c084bf7bde70f4ea53f0436-750-563.jpg'\r\n        // },\r\n    ]\r\n};\r\n\r\nfunction reducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n      case SET_CATEGORIES:\r\n          return payload\r\n      case UPDATE_CATEGORY:\r\n        let newState = {...state};\r\n        newState[payload.id] = payload;\r\n        return newState;\r\n      default:\r\n        return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n\r\n//action creators\r\nexport const setCategories = () => async (\r\n  dispatch\r\n) => {\r\n    console.log('inside set action');\r\n  try {\r\n    fetch('https://restaurant-reservation-33a36.firebaseio.com/categories.json',\r\n    {\r\n      method: 'GET',\r\n      headers:{\r\n        Accept: 'application/json',\r\n        'Content-Type':'application/json'\r\n      }\r\n    }).then(resp=>resp.json()).then(data=>{\r\n      console.log('data from set catego:',data)\r\n      dispatch({type:'SET_CATEGORIES',payload:data});\r\n    })\r\n    \r\n  } catch (error) {\r\n    Alert.alert(error.message);\r\n  }\r\n};\r\n\r\n//UPDATE CATEGORY\r\n\r\nexport const updateCategory = (data) => async (dispatch)=> {\r\n  console.log('inside update method',data) //) //\r\n  try {\r\n    \r\n    await App.db.ref('categories').child(data.id).update(data);\r\n    dispatch({type: UPDATE_CATEGORY, payload: data});\r\n    \r\n  } catch (error) {\r\n    console.log('error: ',error);\r\n    Alert.alert(error.message);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}