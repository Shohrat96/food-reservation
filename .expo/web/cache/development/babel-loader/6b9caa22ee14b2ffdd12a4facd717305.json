{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\screens\\\\Categories\\\\CategoriesScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport styles from \"./styles\";\nimport { categories } from \"../../data/dataArrays\";\nimport { convertObToArr, getNumberOfRecipes, setAutoId } from \"../../data/MockDataAPI\";\nimport { connect } from 'react-redux';\nimport { setCategories } from \"../../store/shop/categories\";\nimport App from \"../../API/firebaseConfig\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCategories: setCategories\n})((_temp = _class = function (_React$Component) {\n  _inherits(CategoriesScreen, _React$Component);\n\n  var _super = _createSuper(CategoriesScreen);\n\n  function CategoriesScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CategoriesScreen);\n\n    _this = _super.call(this, props);\n\n    _this.sendNewCategory = function _callee(category) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              App.db.ref(\"categories/\").push(category);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onPressCategory = function (item) {\n      console.log('item in onpress: ', item);\n      var title = item.name;\n      var category = item;\n\n      _this.props.navigation.navigate('RecipesList', {\n        category: category,\n        title: title\n      });\n    };\n\n    _this.renderCategory = function (_ref) {\n      var item = _ref.item;\n      item = Object.values(item)[0];\n      console.log('item in categ', item);\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: function onPress() {\n          return _this.onPressCategory(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.categoriesItemContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.categoriesPhoto,\n        source: {\n          uri: item.photo_url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.categoriesName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, item.name), React.createElement(Text, {\n        style: styles.categoriesInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, getNumberOfRecipes(item.id), \" product\")));\n    };\n\n    return _this;\n  }\n\n  _createClass(CategoriesScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.setCategories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('props in categories: ', convertObToArr(this.props.categories));\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: convertObToArr(this.props.categories),\n        renderItem: this.renderCategory,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CategoriesScreen;\n}(React.Component), _class.navigationOptions = {\n  title: 'Categories'\n}, _temp));","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/screens/Categories/CategoriesScreen.js"],"names":["React","styles","categories","convertObToArr","getNumberOfRecipes","setAutoId","connect","setCategories","App","mapStateToProps","state","props","sendNewCategory","category","db","ref","push","onPressCategory","item","console","log","title","name","navigation","navigate","renderCategory","Object","values","categoriesItemContainer","categoriesPhoto","uri","photo_url","categoriesName","categoriesInfo","id","Component","navigationOptions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  FlatList,\n  Text,\n  View,\n  Image,\n  TouchableHighlight, Button\n} from 'react-native';\nimport styles from './styles';\nimport { categories } from '../../data/dataArrays';\nimport { convertObToArr, getNumberOfRecipes, setAutoId } from '../../data/MockDataAPI';\nimport { connect } from 'react-redux';\nimport { setCategories } from '../../store/shop/categories';\nimport App from '../../API/firebaseConfig';\n\n\nconst mapStateToProps=(state)=>({\n  categories:state.categories\n})\n\nexport default connect(mapStateToProps,{setCategories}) (class CategoriesScreen extends React.Component {\n  static navigationOptions = {\n    title: 'Categories'\n  };\n\n  constructor(props) {\n    super(props);\n  }\n  sendNewCategory= async (category)=>{\n    App.db.ref(`categories/`).push(category);\n  }\n  onPressCategory = item => {\n    console.log('item in onpress: ',item)\n    const title = item.name;\n    const category = item;\n    this.props.navigation.navigate('RecipesList', { category, title });\n  };\n  \n  renderCategory = ({ item }) => {\n    item=Object.values(item)[0];\n    console.log('item in categ',item)\n\n    return (\n    <TouchableHighlight underlayColor='rgba(73,182,77,1,0.9)' onPress={() => this.onPressCategory(item)}>\n      <View style={styles.categoriesItemContainer}>\n        <Image style={styles.categoriesPhoto} source={{ uri: item.photo_url }} />\n        <Text style={styles.categoriesName}>{item.name}</Text>\n        <Text style={styles.categoriesInfo}>{getNumberOfRecipes(item.id)} product</Text>\n      </View>\n    </TouchableHighlight>\n  );}\n\n  componentDidMount(){\n    this.props.setCategories();\n    //setAutoId('categories');\n  }\n  render() {\n    \n    \n    console.log('props in categories: ',convertObToArr(this.props.categories))\n    return (\n      <View>\n        \n        <FlatList\n          data={convertObToArr(this.props.categories)}\n          renderItem={this.renderCategory}\n          keyExtractor={item => `${item.id}`}\n        />\n        \n      </View>\n    );\n  }\n})\n"]},"metadata":{},"sourceType":"module"}